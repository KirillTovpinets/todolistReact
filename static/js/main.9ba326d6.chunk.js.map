{"version":3,"sources":["view/todo-item.js","constants/competed.js","constants/todos.js","container/todoitemcontainer.js","actions/todos.js","selectors/index.js","view/todo-list.js","view/todo-item-creator.js","container/todoitemcreator-container.js","view/summary.js","actions/completedFilter.js","container/App.js","reducers/todos.js","reducers/completedFilter.js","reducers/index.js","store.js","index.js"],"names":["TodoItem","_this$props","this","props","toggleEdit","deleteAct","toggleStatus","edit","modifiable","text","completed","react_default","a","createElement","ListGroupItem","color","className","Input","type","checked","onChange","value","disabled","ButtonGroup","Fragment","Button","onClick","React","Component","dictionary","all","incompleted","SHOW_ALL","SHOW_COMPLETED","SHOW_INCOMPLETED","ADD_TODO","EDIT_TODO","DELETE_TODO","TOGGLE_TODO","TodoItemContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleModifiable","setState","isModifiable","state","deleteTodoItem","deleteTodo","todoItem","id","editItem","e","_this$props2","editTodo","target","toggleStatusAct","_this$props3","todo_item","connect","constants","payload","selectTodos","todoReducer","filteredTodo","filter","item","completedFilterReducer","selectFilter","getSummary","reduce","acc","arr","TodoList","ListGroup","todoItems","map","el","todoitemcontainer","key","select","TodoItemCreator","_ref","handleChange","addItemHandler","handlePress","react","Label","for","InputGroup","name","onKeyPress","placeholder","InputGroupAddon","addonType","TodoItemCreatorContainer","addItemAction","addTodo","clearField","handleChangeAction","event","handleKeyPress","charCode","todo_item_creator","SummaryComponent","flag","setFilter","selectCompleted","selectIncompled","selectAll","summary","todos","App","todoitemcreator_container","view_summary","todo_list","initialState","combineReducers","arguments","length","undefined","action","concat","lastid","createTodo","objectSpread","createStore","ReactDOM","render","es","store","container_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ba326d6.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, ListGroupItem, Button, ButtonGroup } from 'reactstrap';\nimport '../css/todolist.css';\n\nclass TodoItem extends React.Component {\n\trender() {\n\t\tconst { toggleEdit, deleteAct, toggleStatus, edit, modifiable, text, completed } = this.props;\n\t\treturn (<ListGroupItem color={completed ? 'success' : 'warning'}>\n\t\t\t\t\t\t<div className='todo-item'>\n\t\t\t\t\t\t\t<Input type=\"checkbox\" checked={completed} onChange={toggleStatus} />\n\t\t\t\t\t\t\t<Input type=\"text\" onChange={edit} value={text} disabled={modifiable !== false ? null : 'disabled'}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t{modifiable === false && \n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button color='warning' onClick={toggleEdit}>Edit</Button>\n\t\t\t\t\t\t\t\t\t<Button color='danger' onClick={deleteAct}>Delete</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{modifiable === true && \n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button color='success' onClick={toggleEdit}>Save</Button>\n\t\t\t\t\t\t\t\t\t<Button color='danger' onClick={toggleEdit}>Cancel</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</ListGroupItem>);\n\t}\n}\n\nexport default TodoItem;","export const dictionary = {\n    all: null,\n    completed: true,\n    incompleted: false\n}\n\nexport const SHOW_ALL = 'SHOW_ALL';\nexport const SHOW_COMPLETED = 'SHOW_COMPLETED';\nexport const SHOW_INCOMPLETED = 'SHOW_INCOMPLETED';","export const ADD_TODO = 'ADD_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';","import React from 'react';\nimport TodoItem from '../view/todo-item';\nimport * as actions from '../actions';\nimport { connect } from 'react-redux';\n\nclass TodoItemContainer extends React.Component {\n    constructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisModifiable: false\n\t\t}\n\t}\n\ttoggleModifiable = () => this.setState({isModifiable: !this.state.isModifiable});\n\n\tdeleteTodoItem = () => {\n\t\tconst { deleteTodo, todoItem: { id } } = this.props;\n\t\tdeleteTodo(id);\n\t}\n\teditItem = (e) => {\n\t\tconst { editTodo, todoItem: {id}} = this.props;\n\t\teditTodo(id, e.target.value);\n    }\n    toggleStatusAct = () => {\n        const { toggleStatus, todoItem: {id} } = this.props;\n        toggleStatus(id);\n    }\n    render() {\n        return (<TodoItem \n                toggleEdit={this.toggleModifiable}\n                toggleStatus={this.toggleStatusAct}\n                deleteAct={this.deleteTodoItem}\n                edit={this.editItem}\n                text={this.props.todoItem.text}\n                completed={this.props.todoItem.completed}\n                modifiable={this.state.isModifiable}\n                />)\n    }\n}\n\nexport default connect(null, {\n\tdeleteTodo: actions.deleteTodo,\n\ttoggleStatus: actions.toggleTodo,\n\teditTodo: actions.editTodo,\n})(TodoItemContainer);","import * as constants from '../constants';\n\nexport const addTodo = text => ({type: constants.ADD_TODO, payload: text});\nexport const editTodo = (id, text) => ({\n    type: constants.EDIT_TODO,\n    payload: {id, text}\n})\nexport const deleteTodo = id => ({\n    type: constants.DELETE_TODO,\n    payload: id\n})\n\nexport const toggleTodo = id => ({type: constants.TOGGLE_TODO, payload: id});","import * as constants from '../constants';\n\nexport const selectTodos = state => state.todoReducer\nexport const selectFilter = state => state.completedFilterReducer\nexport const filteredTodo = state => selectTodos(state)\n\t.filter((item) => {\n\t\tswitch (selectFilter(state)) {\n\t\t\tcase constants.dictionary.completed:\n\t\t\t\treturn item.completed;\n\t\t\tcase constants.dictionary.incompleted:\n\t\t\t\treturn !item.completed;\n\t\t\tdefault:\n\t\t\t\treturn item;\n\t\t}\n\t})\nexport const getSummary = state => selectTodos(state)\n\t.reduce((acc, item, arr) => {\n\t\tif (item.completed) {\n\t\t\tacc.completed = (acc.completed + 1) || 1\n\t\t} else {\n\t\t\tacc.incompleted = (acc.incompleted + 1) || 1\n\t\t}\n\t\tacc.all = (acc.all + 1) || 1\n\t\treturn acc\n\t}, {})","import React, { Component } from 'react';\nimport TodoItemContainer from '../container/todoitemcontainer';\nimport { ListGroup } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as select from '../selectors';\n\nclass TodoList extends Component{\n\n\trender() {\n\t\treturn (<ListGroup className='todo-list'>\n\t\t\t\t\t\t{ this.props.todoItems.map((el) =>  <TodoItemContainer key={el.id} todoItem={el}/>) }\n\t\t\t\t</ListGroup>)\n\t};\n};\n\nexport default connect(\n\tstate => ({ todoItems: select.filteredTodo(state)})\n)(TodoList);","import React, { Fragment } from 'react';\nimport { Button, InputGroup, InputGroupAddon, Label, Input } from 'reactstrap';\nimport '../css/item-creator.css';\nimport PropTypes from \"prop-types\";\n\nconst  TodoItemCreator = ({value, handleChange, addItemHandler, handlePress}) => {\n\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Label for='todoitem'>Todo</Label>\n\t\t\t\t\t<InputGroup> \n\t\t\t\t\t\t<Input type='text' \n\t\t\t\t\t\t\t\t\t\tname='todoitem' \n\t\t\t\t\t\t\t\t\t\tid='todoitem' \n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonKeyPress={handlePress}\n\t\t\t\t\t\t\t\t\t\tplaceholder='enter your todo item' \n\t\t\t\t\t\t\t\t\t\tvalue={value}/>\n\t\t\t\t\t\t<InputGroupAddon addonType='append'>\n\t\t\t\t\t\t\t<Button color='success' onClick={addItemHandler}>Add task</Button>\n\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Fragment>\n\t\t);\n}\nTodoItemCreator.propTypes = {\n\tvalue: PropTypes.string.isRequired,\n\thandleChange: PropTypes.func.isRequired,\n\taddItemHandler: PropTypes.func.isRequired\n}\nexport default TodoItemCreator;","import React, { Component } from 'react'\nimport TodoItemCreator from '../view/todo-item-creator';\nimport * as actions from '../actions';\nimport { connect } from 'react-redux';\n\nclass TodoItemCreatorContainer extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttext: ''\n\t\t}\n\t}\n\n\taddItemAction = () => {\n\t\tthis.props.addTodo(this.state.text);\n\t\tthis.clearField();\n\t}\n\thandleChangeAction = (event) => {\n\t\tthis.setState({text: event.target.value});\n\t}\n\tclearField = () => {\n\t\tthis.setState({text: ''});\n\t}\n\thandleKeyPress = (event) => {\n\t\tif (this.state.text !== '' && event.charCode === 13) {\n\t\t\tthis.addItemAction();\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<TodoItemCreator \n\t\t\t\thandleChange={this.handleChangeAction} \n\t\t\t\tvalue={this.state.text} \n\t\t\t\thandlePress={this.handleKeyPress}\n\t\t\t\taddItemHandler={this.addItemAction}/>\n\t\t)\n\t}\n}\n\nexport default connect(null, {\n\taddTodo: actions.addTodo,\n})(TodoItemCreatorContainer);","import React, { Component } from 'react'\nimport { ButtonGroup, Button } from 'reactstrap';\nimport '../css/summary.css';\nimport { connect } from 'react-redux';\nimport * as constants from '../actions';\nimport * as select from '../selectors';\n\nclass SummaryComponent extends Component{\n\tfilterCond(flag) {\n\t\tthis.props.setFilter(flag);\n\t}\n\trender() {\n\t\tconst { selectCompleted, selectIncompled, selectAll, summary} = this.props;\n\t\treturn (\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button onClick={selectAll}>All <strong>{summary.all || 0}</strong></Button>\n\t\t\t\t<Button onClick={selectCompleted}>Completed <strong>{summary.completed || 0}</strong></Button>\n\t\t\t\t<Button onClick={selectIncompled}>To be completed <strong>{summary.incompleted || 0}</strong></Button>\n\t\t\t</ButtonGroup>\n\t\t)\n\t}\n}\n\nexport default connect(state => ({\n\ttodos: select.filteredTodo(state),\n\tsummary: select.getSummary(state)\n}), {\n\tselectAll: constants.showAll,\n\tselectCompleted: constants.showCompleted,\n\tselectIncompled: constants.showIncompleted\n})(SummaryComponent);","import * as constants from '../constants';\n\nexport const showAll = () => ({type: constants.SHOW_ALL});\nexport const showCompleted = () => ({type: constants.SHOW_COMPLETED});\nexport const showIncompleted = () => ({type: constants.SHOW_INCOMPLETED});","import React from 'react';\nimport TodoList from '../view/todo-list';\nimport '../css/app.css';\nimport TodoItemCreatorContainer from './todoitemcreator-container';\nimport SummaryComponent from '../view/summary';\n\nconst App = () => (\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<TodoItemCreatorContainer/>\n\t\t\t\t\t\t<SummaryComponent />\n\t\t\t\t\t\t<TodoList />\n\t\t\t\t\t</div>\n\t\t\t\t)\nexport default App;","import * as constants from '../constants';\nconst initialState = [];\n\nfunction createTodo (todos, text) {\n    const lastid = todos[todos.length - 1];\n    const newId = (lastid && lastid.id + 1) || 0 ;\n    return { id: newId, text, completed: false };\n}\nexport default function todoReducer (state = initialState, action) {\n    switch (action.type) {\n        case constants.ADD_TODO:\n            return state.concat(createTodo(state, action.payload));\n        case constants.EDIT_TODO:\n            return state.map(\n                (el) =>  el.id === action.payload.id\n                    ? {...el, text: action.payload.text}\n                    : el)\n        case constants.TOGGLE_TODO:\n            return state.map(\n                (el) =>  el.id === action.payload\n                    ? {...el, completed: !el.completed}\n                    : el)\n        case constants.DELETE_TODO:\n            return state = state.filter(el => el.id !== action.payload);\n        default:\n            return state;\n    }\n}","import * as constants from '../constants';\n\nconst initialState = constants.dictionary.all;\n\nexport default function completedFilterReducer (state = initialState, action) {\n    switch (action.type) {\n        case constants.SHOW_ALL:\n            return constants.dictionary.all;\n        case constants.SHOW_COMPLETED:\n            return constants.dictionary.completed;\n        case constants.SHOW_INCOMPLETED:\n            return constants.dictionary.incompleted;\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport todoReducer from './todos';\nimport completedFilterReducer from './completedFilter';\n\nexport default combineReducers({\n    todoReducer,\n    completedFilterReducer\n})\n","import { createStore } from 'redux';\nimport todoReducer from './reducers'\nexport default createStore(todoReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './container/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}